import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from getweather import get_weather, open_weather_token, wind, get_pressure, humidity, get_weather2
from aiogram import F
from aiogram.utils.keyboard import InlineKeyboardBuilder

logging.basicConfig(level=logging.INFO)
bot = Bot(token="7143705319:AAEhPCqtdbuyiD08aQJXS0rzou5SfLzhE6E")
dp = Dispatcher()
cities = []
currentcity = []
currentcity.append('')


@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    if len(currentcity[0]) == 0:

        kb = [
            [
                types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞"),
                types.KeyboardButton(text="–í–ª–∞–∂–Ω–æ—Å—Ç—å"),
                types.KeyboardButton(text="–í–µ—Ç–µ—Ä"),
                types.KeyboardButton(text="–î–∞–≤–ª–µ–Ω–∏–µ")
            ],
        ]
        keyboard = types.ReplyKeyboardMarkup(
            keyboard=kb,
            resize_keyboard=True)
    else:

        kb = [
            [
                types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞"),
                types.KeyboardButton(text="–í–ª–∞–∂–Ω–æ—Å—Ç—å"),
                types.KeyboardButton(text="–í–µ—Ç–µ—Ä"),
                types.KeyboardButton(text="–î–∞–≤–ª–µ–Ω–∏–µ")
            ],
        ]
        keyboard = types.ReplyKeyboardMarkup(
            keyboard=kb,
            resize_keyboard=True)

    await bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –Ø Weather bot. –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è –ø—Ä–∏—à–ª—é —ç—Ç–æ –ø–æ–≥–æ–¥—É!", reply_markup=keyboard)


@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    await bot.send_message(message.from_user.id, '–∫–æ–º–∞–Ω–¥—ã: /start, /help, /add –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, /delete –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, /weather –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞')


@dp.message(F.text == "–ü–æ–≥–æ–¥–∞")
async def cmd_weather(message: types.Message):
    if len(currentcity[0]) == 0:
        await message.reply('–≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≥–æ—Ä–æ–¥')
    else:
        await message.reply(get_weather(currentcity[0], open_weather_token))


@dp.message(F.text == "–í–µ—Ç–µ—Ä")
async def cmd_wind(message: types.Message):
    if len(currentcity[0]) == 0:
        await message.reply('–≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≥–æ—Ä–æ–¥')
    else:
        await message.reply(f'–í–µ—Ç–µ—Äüí® –≤ {currentcity[0]}: {wind(currentcity[0], open_weather_token)} –º/—Å')


@dp.message(F.text == "–î–∞–≤–ª–µ–Ω–∏–µ")
async def cmd_pressure(message: types.Message):
    if len(currentcity[0]) == 0:
        await message.reply('–≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≥–æ—Ä–æ–¥')
    else:
        await message.reply(f'–î–∞–≤–ª–µ–Ω–∏–µ –≤ {currentcity[0]}: {get_pressure(currentcity[0], open_weather_token)} –º–º.—Ä—Ç.—Å—Ç')


@dp.message(F.text == "–í–ª–∞–∂–Ω–æ—Å—Ç—å")
async def cmd_humidity(message: types.Message):
    if len(currentcity[0]) == 0:
        await message.reply('–≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≥–æ—Ä–æ–¥')
    else:
        await message.reply(f'–í–ª–∞–∂–Ω–æ—Å—Ç—åüíß –≤ {currentcity[0]}: {humidity(currentcity[0], open_weather_token)}')


@dp.message(Command("list"))
async def cmd_list(message: types.Message):
    if cities:
        builder = InlineKeyboardBuilder()

        for index in cities:
            builder.button(text=index, callback_data=index)

        return await message.answer("–í–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞", reply_markup=builder.adjust(2).as_markup())
    else:
        return await message.answer('–î–æ–±–∞–≤—å—Ç–µ –≥–æ—Ä–æ–¥ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add')


@dp.callback_query()
async def callback_in(callback: types.callback_query):
    currentcity[0] = callback.data

    return await callback.answer(text=f'–í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥ {callback.data}', show_alert=True)


@dp.message(Command("weather"))
async def cmd_weather2(message: types.Message):
    text = message.text.split('/weather ')[1].capitalize()
    await message.reply(get_weather2(text, open_weather_token))


@dp.message(Command("delete"))
async def cmd_delete(message: types.Message):
    text = message.text.split('/delete ')[1].capitalize()
    if text in cities:
        cities.remove(text)
        await message.reply(f'–≥–æ—Ä–æ–¥ {text} —É–¥–∞–ª–µ–Ω')
    else:
        await message.reply(f'–≥–æ—Ä–æ–¥–∞ {text} –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ')
@dp.message(Command("add"))
async def cmd_addr(message: types.Message):
    text = message.text.split('/add ')[1].capitalize()
    xd = get_weather(text, open_weather_token)
    if xd != '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞':
        if text in cities:
            await message.reply(f'–ì–æ—Ä–æ–¥ {text} —É–∂–µ –µ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω')

        else:
            cities.append(text)
            currentcity[0] = text
            await message.reply(f'–ì–æ—Ä–æ–¥ {text} –¥–æ–±–∞–≤–ª–µ–Ω –∏ –≤—ã–±—Ä–∞–Ω')
    else:
        await message.reply('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞')
        





async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())

